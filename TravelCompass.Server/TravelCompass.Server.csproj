    <Project Sdk="Microsoft.NET.Sdk.Web">

      <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <SpaRoot>..\travelcompass.client</SpaRoot>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <SpaProxyServerUrl>https://localhost:51715</SpaProxyServerUrl>
	      <OutputType>Exe</OutputType>
      </PropertyGroup>

      <ItemGroup>
        <PackageReference Include="CSharpFunctionalExtensions" Version="3.5.1" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.13" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy">
          <Version>8.*-*</Version>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.13" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.13">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.13" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.13">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
        <PackageReference Include="NSwag.AspNetCore" Version="14.2.0" />
        <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="14.2.0" />
        <PackageReference Include="NSwag.Generation.AspNetCore" Version="14.2.0" />
        <PackageReference Include="NSwag.MSBuild" Version="14.2.0">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="7.3.1" />
      </ItemGroup>
	

      <ItemGroup>
        <ProjectReference Include="..\travelcompass.client\travelcompass.client.esproj">
          <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        </ProjectReference>
        <ProjectReference Include="..\TravelCompassApplication\TravelCompassApplication.csproj" />
        <ProjectReference Include="..\TravelCompassLogic\TravelCompassLogic.csproj" />
      </ItemGroup>

	    <PropertyGroup>
		    <GenerateDocumentationFile>true</GenerateDocumentationFile>
	    </PropertyGroup>
	    <!--<Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
		    <Message Importance="High" Text="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
		    <Exec WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
		    <Delete Files="$(ProjectDir)\obj\$(MSBuildProjectFile).NSwag.targets" />

	    </Target>-->
	    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		    <!-- Ensure Node.js is installed -->
		    <Exec Command="node --version" ContinueOnError="true">
			    <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		    </Exec>
		    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	    </Target>

	    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

		    <!-- Include the newly-built files in the publish output -->
		    <ItemGroup>
			    <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			    <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				    <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				    <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				    <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			    </ResolvedFileToPublish>
		    </ItemGroup>
	    </Target>

    </Project>
